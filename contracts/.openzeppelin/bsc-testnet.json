{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x03CBb6eAFA64fc1D6a1FbC96f2A745F0A39A36af",
      "txHash": "0x59ce44a0c58df7e8300b80c558a0a4494a867765f5053b88e7f4eaa698890386",
      "kind": "uups"
    },
    {
      "address": "0xdFE72E3B3Ea09254ea4631894FFC4f6D840Bb51F",
      "txHash": "0xa850684b7e94b176e03c5f3a94e2f55de3b882401e05459be2b953db71f9d13c",
      "kind": "uups"
    },
    {
      "address": "0xFB0D2D58C28996d1275df3202bA5D91B34Cf5244",
      "txHash": "0xfc8c08845fcdc60fd5bef48e2f72568747c691dfda8c319a651994d8b791ab6b",
      "kind": "uups"
    },
    {
      "address": "0xB2a5507eec89E0dE3b52DEb4C5AA25de2e858404",
      "txHash": "0xcf0e9c63b2191f1d6e7d343b65f7badff532bb3f3af245d9d79f219aadd7d4dd",
      "kind": "uups"
    },
    {
      "address": "0xfca750a2cAf0d964e42E93D9D85364F432d7770D",
      "txHash": "0x2897a68198bf0678e5fef484d5228689830c1610e7f1e175d00d92840d412fae",
      "kind": "uups"
    },
    {
      "address": "0x069387eC933b9616466ca41D493115763D35Ab5f",
      "txHash": "0x6ca6ca38974f7183048f9a5b95f023637faf202bc107e4f638a88331542813c7",
      "kind": "uups"
    },
    {
      "address": "0x0C5f98e281cB3562a2EEDF3EE63D3b623De98b15",
      "txHash": "0x4f2729a004d47a7a4050a36e4e96f829b25b74df74276896cd9c07b49bad309f",
      "kind": "uups"
    },
    {
      "address": "0x2181B366B730628F97c44C17de19949e5359682C",
      "txHash": "0x427b8a1cbce6ac834b3d20e4ed87d0c2f5670385ab32ce957d87a19d5ee321b9",
      "kind": "uups"
    },
    {
      "address": "0xd80bE0DDCA595fFf35bF44A7d2D4E312b05A1576",
      "txHash": "0x587554a2c0b9fceedfafbe88fcd81f23b8bb36e2c5b8cdd703292ead75a0f3e8",
      "kind": "uups"
    },
    {
      "address": "0x8FEbF8eA03E8e54846a7B82f7F6146bAE17bd3f4",
      "txHash": "0x37431a04741b485630091ea6a3840ad556c7a9a56ea1ba6d6b3c49f92cccba4e",
      "kind": "uups"
    }
  ],
  "impls": {
    "265024f8315628ef18eeae694e5dd9a3b334aa16f5c562c0963463e25c4150b3": {
      "address": "0x42026f62c66e2640A8189613F497FF3917F3975a",
      "txHash": "0x3504f00a4eba69080dde41451dd4afb8f0ecb0483a05184c6fee87873dcbff3b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "GenomeNFT",
            "src": "contracts\\GenomeNFT.sol:19"
          },
          {
            "label": "genomicMetadata",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(GenomicMetadata)8321_storage)",
            "contract": "GenomeNFT",
            "src": "contracts\\GenomeNFT.sol:30"
          },
          {
            "label": "genomeToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "GenomeNFT",
            "src": "contracts\\GenomeNFT.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)240_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)551_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)637_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_struct(GenomicMetadata)8321_storage)": {
            "label": "mapping(uint256 => struct GenomeNFT.GenomicMetadata)",
            "numberOfBytes": "32"
          },
          "t_struct(GenomicMetadata)8321_storage": {
            "label": "struct GenomeNFT.GenomicMetadata",
            "members": [
              {
                "label": "geneName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ipfsHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "qualityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "contributor",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:26",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "835963518a387e47f65ff7b32eebb949943748cd8814125011fd2f270da078a0": {
      "address": "0x6de52c85c767E46648C4ff968C389998738b264f",
      "txHash": "0xf4b7128895f679c70cb3f5fe4305a5bf3357f75054331f40be4bc45221bdb9f4",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)417_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fea431d3605cebb2b2260e38f1e17c4be9c2814ae55fa30c94bcc1562cf463aa": {
      "address": "0x52B89fC13312c28137009C42eab736368Cd158aa",
      "txHash": "0x4fed931fff344aa287e6dbc77bce4f1be90cf44667f3802aea967dc9c37890c7",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "authorizedMinters",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GenomeToken",
            "src": "contracts\\GenomeToken.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)830_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e5260db57d0e23260c554102883fd859c04d542613b1c97994d55eef8ad9cfbf": {
      "address": "0x42489eEf6f7dfde692aB3a2dfe74734f2FfADfc5",
      "txHash": "0x975d3cfd6a0292aafce76255fadcdafe50521e0259b75151f7530a9d3ed9aa04",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "GenomeNFT",
            "src": "contracts\\GenomeNFT.sol:19"
          },
          {
            "label": "genomicMetadata",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(GenomicMetadata)10965_storage)",
            "contract": "GenomeNFT",
            "src": "contracts\\GenomeNFT.sol:30"
          },
          {
            "label": "genomeToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "GenomeNFT",
            "src": "contracts\\GenomeNFT.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)433_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)744_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)830_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_struct(GenomicMetadata)10965_storage)": {
            "label": "mapping(uint256 => struct GenomeNFT.GenomicMetadata)",
            "numberOfBytes": "32"
          },
          "t_struct(GenomicMetadata)10965_storage": {
            "label": "struct GenomeNFT.GenomicMetadata",
            "members": [
              {
                "label": "geneName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ipfsHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "qualityScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "contributor",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:26",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e258c44d24fd13d6711e8e7511836cf6f79df7145bb318ae0452060b02890b0a": {
      "address": "0xC4fD82759Ccca187a8261Ad4eCaE6c1FF1430930",
      "txHash": "0x970b7dfd06e93dbc938ac2c75c405a8b1640fe3e544a71d3b637fa34d6355c42",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "genomeNFT",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC721)3613",
            "contract": "GenomeMarketplace",
            "src": "contracts\\GenomeMarketplace.sol:42"
          },
          {
            "label": "genomeToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)3470",
            "contract": "GenomeMarketplace",
            "src": "contracts\\GenomeMarketplace.sol:43"
          },
          {
            "label": "listings",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Listing)10175_storage)",
            "contract": "GenomeMarketplace",
            "src": "contracts\\GenomeMarketplace.sol:45"
          },
          {
            "label": "accessGrants",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_struct(AccessGrant)10186_storage)",
            "contract": "GenomeMarketplace",
            "src": "contracts\\GenomeMarketplace.sol:46"
          },
          {
            "label": "userListings",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "GenomeMarketplace",
            "src": "contracts\\GenomeMarketplace.sol:47"
          },
          {
            "label": "userAccess",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "GenomeMarketplace",
            "src": "contracts\\GenomeMarketplace.sol:48"
          },
          {
            "label": "platformFeePercentage",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "GenomeMarketplace",
            "src": "contracts\\GenomeMarketplace.sol:50"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "GenomeMarketplace",
            "src": "contracts\\GenomeMarketplace.sol:51"
          },
          {
            "label": "listingCounter",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "GenomeMarketplace",
            "src": "contracts\\GenomeMarketplace.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)830_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)894_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3470": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721)3613": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AccessGrant)10186_storage)": {
            "label": "mapping(bytes32 => struct GenomeMarketplace.AccessGrant)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Listing)10175_storage)": {
            "label": "mapping(uint256 => struct GenomeMarketplace.Listing)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessGrant)10186_storage": {
            "label": "struct GenomeMarketplace.AccessGrant",
            "members": [
              {
                "label": "grantee",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accessLevel",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Listing)10175_storage": {
            "label": "struct GenomeMarketplace.Listing",
            "members": [
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "genomeTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "accessLevel",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "97cab9ed62cee246a8b5ef0fa00b82c39e1c8a05d0f3651415b5ffc7f66cc365": {
      "address": "0xD09F1d24e21FC6D39793Df7EBeb4a8dDffE90611",
      "txHash": "0x6a396aaec545b8804f83ef662280183990cb5a909225dc01a50008431d53557e",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "genomeToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1392",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:61"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:63"
          },
          {
            "label": "votingDelay",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:64"
          },
          {
            "label": "votingPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:65"
          },
          {
            "label": "executionDelay",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:66"
          },
          {
            "label": "proposalThreshold",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:67"
          },
          {
            "label": "quorum",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:68"
          },
          {
            "label": "proposals",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(Proposal)1850_storage)",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:70"
          },
          {
            "label": "proposalVotes",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vote)1869_storage))",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:71"
          },
          {
            "label": "proposalVoters",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:72"
          },
          {
            "label": "userProposals",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:73"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:75"
          },
          {
            "label": "treasuryBalance",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "GenomeDAO",
            "src": "contracts\\GenomeDAO.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1392": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(ProposalType)1855": {
            "label": "enum GenomeDAO.ProposalType",
            "members": [
              "Research",
              "Platform",
              "Parameter",
              "Emergency"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(VoteChoice)1859": {
            "label": "enum GenomeDAO.VoteChoice",
            "members": [
              "Against",
              "For",
              "Abstain"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Vote)1869_storage)": {
            "label": "mapping(address => struct GenomeDAO.Vote)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Vote)1869_storage))": {
            "label": "mapping(uint256 => mapping(address => struct GenomeDAO.Vote))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Proposal)1850_storage)": {
            "label": "mapping(uint256 => struct GenomeDAO.Proposal)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Proposal)1850_storage": {
            "label": "struct GenomeDAO.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "ipfsHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "fundingAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genomeTokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "votingStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "votingEnd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 1,
                "slot": "13"
              },
              {
                "label": "proposalType",
                "type": "t_enum(ProposalType)1855",
                "offset": 2,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(Vote)1869_storage": {
            "label": "struct GenomeDAO.Vote",
            "members": [
              {
                "label": "voter",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(VoteChoice)1859",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "reason",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
